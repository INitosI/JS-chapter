/------------------------------------------------------------------------------/
***** Масиви *****
/------------------------------------------------------------------------------/


let arr = ["","",""];
виклик arr[]
arr[x] = Lemonka - заміняти, або додавати
arr.length - дізнатися довжину

масив може мати різні типи даних у переліку

arr.push() - додає у кінець массиву елемент
arr.pop() - видаляє

arr.shift() - видаляє перший елемент
arr.unshift() - додає перший елемент

for off - for (const value of arr) - перелік массиву

двохвимірний масив - let matrix = [[...],[...],[...]]

matrix[x][y]

/------------------------------------------------------------------------------/
***** методи присвоєння *****
/------------------------------------------------------------------------------/


Різниця між примітивними типами і не примітивними - примітивні типи
копіюються за допомогою by value: let a = 1; let b = a;

не примітивні (об'єкти та масиви) - копіюються за посиланням:
let arr = [..];
let arr2 = arr; - якщо я зміню arr.push() то зміниться і arr2



/------------------------------------------------------------------------------/
***** методи масиву *****
/------------------------------------------------------------------------------/


let arr = ["a","b","c"];
let arr2 = [1,2,3];

delete arr[index]; - видаляє значення, але не видаляє ключ, тобто масив
не зміниться у розмірі

arr.splice(з якого індексу, скільки елементів); - видаляє ключ

Як додати 1 масив до другого? arr.concat(arr2, str,int ); // a,b,c,1,2,3

arr.indexOf(елемент, оптимально з якого индексу шукати)
arr.lastIndexOf - те саме що й минуле, але навпаки
arr.includes - перевіряє наявність елементу у масиві

Метод forEach() в JavaScript - удобный инструмент для перебора элементов
массива и выполнения определенной операции над каждым из них.
Вот основные моменты о нем:

array.forEach(function(currentValue, index, array) {
  // код, который будет выполняться для каждого элемента
});

currentValue: значение текущего элемента в массиве.
index: индекс текущего элемента в массиве (опционально).
array: сам массив (опционально).


let arr = [
	{ id: 1, name: cherry },
	{ id: 2, name: tomat },
	{ id: 3, name: apple },
	{ id: 4, name: obricos },
];


find,filter

Якщо масив об'єктів:**** arr.find(item=> item.id === id ) **** // выдаст name
тільки це шукає лише 1 збіг, якщо потрібно шукати всі збіги то:
arr.filter(item=> item.id /*>,<,===,!==...*/ 2)

map

let result = arr.map(item=> item.name.length) - цей приклад поверне довжину всіх елементів
arr.map(умовна-назва=> умовна-назва.name/*або іd об'єкту в arr*/.метод)

split

створює масив з строки, наприклад

let names = "Аня, Ваня, Маша, Даша";
let arr = names.split(", "/*Якими символами розділяти на об'єкти масиву*/); 

join

зворотня дія до split

let newStr = arr.join("Що буде розділяти");

reduce

let red = arr.reduse((summ,item)=>summ+item); summ - зберігає минуле значення, ітем це перелік значень => минула сума + ітем.
рівносильно:
let summ = 0;
for(let i = 0; i<=arr.length;i++){
	summ += arr[i];
}
