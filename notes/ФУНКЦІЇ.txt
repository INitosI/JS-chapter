/------------------------------------------------------------------------------/
***** ФУНКЦІЇ *****
/------------------------------------------------------------------------------/


function FuName (arguments){...}
Виклик: FuName();

function expression: Функційний вираз - Функційні вирази доступні тільки після того, як вони були оголошені у коді.
Це означає, що ви не зможете викликати функційний вираз до того моменту, коли ви його не оголосите.

const FuName = function (){...}
Виклик: FuName();

****псевдомасив - arguments**** - Якщо ми не знаємо скільки саме у нас буде аргументів у Функції, то arguments має у собі додаткове місце
function(){
	const arg = Array.from(arguments);
}

****callback****

Callback - це функція, яку ви передаєте як аргумент у
іншу функцію, і яка буде викликана (або "зворотно викликана")
у майбутньому, після завершення певної операції або події.

function callback(question, yes, no) { //конкретно у цьому прикладі буде виконана одна з функцій coutYes або coutNo, в залежності від дії confirm(question)
	if (confirm(question)) {
		yes();
	} else {
		no();
	}
}
function coutYes() {  // - Callback
	console.log('you say yes'); - 
}
function coutNo() { // - Callback
	console.log('you say no');
}
callback('Yes or not?', coutYes, coutNo);


****return**** - якщо вже є return то далі код не виконується:
{if(age>18) return console.log(hello!); return console.log(Bye!);}

/------------------------------------------------------------------------------/
***** СТРІЛКОВІ ФУНКЦІЇ *****
/------------------------------------------------------------------------------/


const FuName = ()=>{...}
